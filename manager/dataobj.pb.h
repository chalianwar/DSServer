// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dataobj.proto

#ifndef PROTOBUF_dataobj_2eproto__INCLUDED
#define PROTOBUF_dataobj_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dataobj {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dataobj_2eproto();
void protobuf_AssignDesc_dataobj_2eproto();
void protobuf_ShutdownFile_dataobj_2eproto();

class Message;
class Response;

enum Message_trace_operator_t {
  Message_trace_operator_t_operator_read = 1,
  Message_trace_operator_t_operator_write = 2,
  Message_trace_operator_t_operator_trim = 3
};
bool Message_trace_operator_t_IsValid(int value);
const Message_trace_operator_t Message_trace_operator_t_trace_operator_t_MIN = Message_trace_operator_t_operator_read;
const Message_trace_operator_t Message_trace_operator_t_trace_operator_t_MAX = Message_trace_operator_t_operator_trim;
const int Message_trace_operator_t_trace_operator_t_ARRAYSIZE = Message_trace_operator_t_trace_operator_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_trace_operator_t_descriptor();
inline const ::std::string& Message_trace_operator_t_Name(Message_trace_operator_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_trace_operator_t_descriptor(), value);
}
inline bool Message_trace_operator_t_Parse(
    const ::std::string& name, Message_trace_operator_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_trace_operator_t>(
    Message_trace_operator_t_descriptor(), name, value);
}
enum Message_request_type_t {
  Message_request_type_t_need_flash_info = 1,
  Message_request_type_t_not_need_flash_info = 2,
  Message_request_type_t_shut_cluster = 3
};
bool Message_request_type_t_IsValid(int value);
const Message_request_type_t Message_request_type_t_request_type_t_MIN = Message_request_type_t_need_flash_info;
const Message_request_type_t Message_request_type_t_request_type_t_MAX = Message_request_type_t_shut_cluster;
const int Message_request_type_t_request_type_t_ARRAYSIZE = Message_request_type_t_request_type_t_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_request_type_t_descriptor();
inline const ::std::string& Message_request_type_t_Name(Message_request_type_t value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_request_type_t_descriptor(), value);
}
inline bool Message_request_type_t_Parse(
    const ::std::string& name, Message_request_type_t* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_request_type_t>(
    Message_request_type_t_descriptor(), name, value);
}
// ===================================================================

class Message : public ::google::protobuf::Message {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  Message* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Message_trace_operator_t trace_operator_t;
  static const trace_operator_t operator_read = Message_trace_operator_t_operator_read;
  static const trace_operator_t operator_write = Message_trace_operator_t_operator_write;
  static const trace_operator_t operator_trim = Message_trace_operator_t_operator_trim;
  static inline bool trace_operator_t_IsValid(int value) {
    return Message_trace_operator_t_IsValid(value);
  }
  static const trace_operator_t trace_operator_t_MIN =
    Message_trace_operator_t_trace_operator_t_MIN;
  static const trace_operator_t trace_operator_t_MAX =
    Message_trace_operator_t_trace_operator_t_MAX;
  static const int trace_operator_t_ARRAYSIZE =
    Message_trace_operator_t_trace_operator_t_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  trace_operator_t_descriptor() {
    return Message_trace_operator_t_descriptor();
  }
  static inline const ::std::string& trace_operator_t_Name(trace_operator_t value) {
    return Message_trace_operator_t_Name(value);
  }
  static inline bool trace_operator_t_Parse(const ::std::string& name,
      trace_operator_t* value) {
    return Message_trace_operator_t_Parse(name, value);
  }

  typedef Message_request_type_t request_type_t;
  static const request_type_t need_flash_info = Message_request_type_t_need_flash_info;
  static const request_type_t not_need_flash_info = Message_request_type_t_not_need_flash_info;
  static const request_type_t shut_cluster = Message_request_type_t_shut_cluster;
  static inline bool request_type_t_IsValid(int value) {
    return Message_request_type_t_IsValid(value);
  }
  static const request_type_t request_type_t_MIN =
    Message_request_type_t_request_type_t_MIN;
  static const request_type_t request_type_t_MAX =
    Message_request_type_t_request_type_t_MAX;
  static const int request_type_t_ARRAYSIZE =
    Message_request_type_t_request_type_t_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  request_type_t_descriptor() {
    return Message_request_type_t_descriptor();
  }
  static inline const ::std::string& request_type_t_Name(request_type_t value) {
    return Message_request_type_t_Name(value);
  }
  static inline bool request_type_t_Parse(const ::std::string& name,
      request_type_t* value) {
    return Message_request_type_t_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 obj_no = 1;
  inline bool has_obj_no() const;
  inline void clear_obj_no();
  static const int kObjNoFieldNumber = 1;
  inline ::google::protobuf::uint32 obj_no() const;
  inline void set_obj_no(::google::protobuf::uint32 value);

  // required uint32 offset = 2;
  inline bool has_offset() const;
  inline void clear_offset();
  static const int kOffsetFieldNumber = 2;
  inline ::google::protobuf::uint32 offset() const;
  inline void set_offset(::google::protobuf::uint32 value);

  // required uint32 length = 3;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 3;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);

  // required .dataobj.Message.trace_operator_t operator_t = 4;
  inline bool has_operator_t() const;
  inline void clear_operator_t();
  static const int kOperatorTFieldNumber = 4;
  inline ::dataobj::Message_trace_operator_t operator_t() const;
  inline void set_operator_t(::dataobj::Message_trace_operator_t value);

  // required float timestamp = 5;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  inline float timestamp() const;
  inline void set_timestamp(float value);

  // required int32 ec_index = 6;
  inline bool has_ec_index() const;
  inline void clear_ec_index();
  static const int kEcIndexFieldNumber = 6;
  inline ::google::protobuf::int32 ec_index() const;
  inline void set_ec_index(::google::protobuf::int32 value);

  // required .dataobj.Message.request_type_t rq_type = 7;
  inline bool has_rq_type() const;
  inline void clear_rq_type();
  static const int kRqTypeFieldNumber = 7;
  inline ::dataobj::Message_request_type_t rq_type() const;
  inline void set_rq_type(::dataobj::Message_request_type_t value);

  // required float flash_utilization = 8;
  inline bool has_flash_utilization() const;
  inline void clear_flash_utilization();
  static const int kFlashUtilizationFieldNumber = 8;
  inline float flash_utilization() const;
  inline void set_flash_utilization(float value);

  // required float flash_victim_utilization = 9;
  inline bool has_flash_victim_utilization() const;
  inline void clear_flash_victim_utilization();
  static const int kFlashVictimUtilizationFieldNumber = 9;
  inline float flash_victim_utilization() const;
  inline void set_flash_victim_utilization(float value);

  // required float flash_full_blk_utilization = 10;
  inline bool has_flash_full_blk_utilization() const;
  inline void clear_flash_full_blk_utilization();
  static const int kFlashFullBlkUtilizationFieldNumber = 10;
  inline float flash_full_blk_utilization() const;
  inline void set_flash_full_blk_utilization(float value);

  // required uint32 node_nr_erases = 11;
  inline bool has_node_nr_erases() const;
  inline void clear_node_nr_erases();
  static const int kNodeNrErasesFieldNumber = 11;
  inline ::google::protobuf::uint32 node_nr_erases() const;
  inline void set_node_nr_erases(::google::protobuf::uint32 value);

  // required float local_log_utilization = 12;
  inline bool has_local_log_utilization() const;
  inline void clear_local_log_utilization();
  static const int kLocalLogUtilizationFieldNumber = 12;
  inline float local_log_utilization() const;
  inline void set_local_log_utilization(float value);

  // required float request_number = 13;
  inline bool has_request_number() const;
  inline void clear_request_number();
  static const int kRequestNumberFieldNumber = 13;
  inline float request_number() const;
  inline void set_request_number(float value);

  // optional float response_time = 14;
  inline bool has_response_time() const;
  inline void clear_response_time();
  static const int kResponseTimeFieldNumber = 14;
  inline float response_time() const;
  inline void set_response_time(float value);

  // @@protoc_insertion_point(class_scope:dataobj.Message)
 private:
  inline void set_has_obj_no();
  inline void clear_has_obj_no();
  inline void set_has_offset();
  inline void clear_has_offset();
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_operator_t();
  inline void clear_has_operator_t();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_ec_index();
  inline void clear_has_ec_index();
  inline void set_has_rq_type();
  inline void clear_has_rq_type();
  inline void set_has_flash_utilization();
  inline void clear_has_flash_utilization();
  inline void set_has_flash_victim_utilization();
  inline void clear_has_flash_victim_utilization();
  inline void set_has_flash_full_blk_utilization();
  inline void clear_has_flash_full_blk_utilization();
  inline void set_has_node_nr_erases();
  inline void clear_has_node_nr_erases();
  inline void set_has_local_log_utilization();
  inline void clear_has_local_log_utilization();
  inline void set_has_request_number();
  inline void clear_has_request_number();
  inline void set_has_response_time();
  inline void clear_has_response_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 obj_no_;
  ::google::protobuf::uint32 offset_;
  ::google::protobuf::uint32 length_;
  int operator_t_;
  float timestamp_;
  ::google::protobuf::int32 ec_index_;
  int rq_type_;
  float flash_utilization_;
  float flash_victim_utilization_;
  float flash_full_blk_utilization_;
  ::google::protobuf::uint32 node_nr_erases_;
  float local_log_utilization_;
  float request_number_;
  float response_time_;
  friend void  protobuf_AddDesc_dataobj_2eproto();
  friend void protobuf_AssignDesc_dataobj_2eproto();
  friend void protobuf_ShutdownFile_dataobj_2eproto();

  void InitAsDefaultInstance();
  static Message* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string rsp = 1;
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 1;
  inline const ::std::string& rsp() const;
  inline void set_rsp(const ::std::string& value);
  inline void set_rsp(const char* value);
  inline void set_rsp(const char* value, size_t size);
  inline ::std::string* mutable_rsp();
  inline ::std::string* release_rsp();
  inline void set_allocated_rsp(::std::string* rsp);

  // required float rsp_time = 2;
  inline bool has_rsp_time() const;
  inline void clear_rsp_time();
  static const int kRspTimeFieldNumber = 2;
  inline float rsp_time() const;
  inline void set_rsp_time(float value);

  // @@protoc_insertion_point(class_scope:dataobj.Response)
 private:
  inline void set_has_rsp();
  inline void clear_has_rsp();
  inline void set_has_rsp_time();
  inline void clear_has_rsp_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* rsp_;
  float rsp_time_;
  friend void  protobuf_AddDesc_dataobj_2eproto();
  friend void protobuf_AssignDesc_dataobj_2eproto();
  friend void protobuf_ShutdownFile_dataobj_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// ===================================================================


// ===================================================================

// Message

// required uint32 obj_no = 1;
inline bool Message::has_obj_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message::set_has_obj_no() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message::clear_has_obj_no() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message::clear_obj_no() {
  obj_no_ = 0u;
  clear_has_obj_no();
}
inline ::google::protobuf::uint32 Message::obj_no() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.obj_no)
  return obj_no_;
}
inline void Message::set_obj_no(::google::protobuf::uint32 value) {
  set_has_obj_no();
  obj_no_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.obj_no)
}

// required uint32 offset = 2;
inline bool Message::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
inline ::google::protobuf::uint32 Message::offset() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.offset)
  return offset_;
}
inline void Message::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.offset)
}

// required uint32 length = 3;
inline bool Message::has_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message::set_has_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message::clear_has_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message::clear_length() {
  length_ = 0u;
  clear_has_length();
}
inline ::google::protobuf::uint32 Message::length() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.length)
  return length_;
}
inline void Message::set_length(::google::protobuf::uint32 value) {
  set_has_length();
  length_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.length)
}

// required .dataobj.Message.trace_operator_t operator_t = 4;
inline bool Message::has_operator_t() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message::set_has_operator_t() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message::clear_has_operator_t() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message::clear_operator_t() {
  operator_t_ = 1;
  clear_has_operator_t();
}
inline ::dataobj::Message_trace_operator_t Message::operator_t() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.operator_t)
  return static_cast< ::dataobj::Message_trace_operator_t >(operator_t_);
}
inline void Message::set_operator_t(::dataobj::Message_trace_operator_t value) {
  assert(::dataobj::Message_trace_operator_t_IsValid(value));
  set_has_operator_t();
  operator_t_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.operator_t)
}

// required float timestamp = 5;
inline bool Message::has_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message::set_has_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline float Message::timestamp() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.timestamp)
  return timestamp_;
}
inline void Message::set_timestamp(float value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.timestamp)
}

// required int32 ec_index = 6;
inline bool Message::has_ec_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Message::set_has_ec_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Message::clear_has_ec_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Message::clear_ec_index() {
  ec_index_ = 0;
  clear_has_ec_index();
}
inline ::google::protobuf::int32 Message::ec_index() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.ec_index)
  return ec_index_;
}
inline void Message::set_ec_index(::google::protobuf::int32 value) {
  set_has_ec_index();
  ec_index_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.ec_index)
}

// required .dataobj.Message.request_type_t rq_type = 7;
inline bool Message::has_rq_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Message::set_has_rq_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Message::clear_has_rq_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Message::clear_rq_type() {
  rq_type_ = 1;
  clear_has_rq_type();
}
inline ::dataobj::Message_request_type_t Message::rq_type() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.rq_type)
  return static_cast< ::dataobj::Message_request_type_t >(rq_type_);
}
inline void Message::set_rq_type(::dataobj::Message_request_type_t value) {
  assert(::dataobj::Message_request_type_t_IsValid(value));
  set_has_rq_type();
  rq_type_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.rq_type)
}

// required float flash_utilization = 8;
inline bool Message::has_flash_utilization() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Message::set_has_flash_utilization() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Message::clear_has_flash_utilization() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Message::clear_flash_utilization() {
  flash_utilization_ = 0;
  clear_has_flash_utilization();
}
inline float Message::flash_utilization() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.flash_utilization)
  return flash_utilization_;
}
inline void Message::set_flash_utilization(float value) {
  set_has_flash_utilization();
  flash_utilization_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.flash_utilization)
}

// required float flash_victim_utilization = 9;
inline bool Message::has_flash_victim_utilization() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Message::set_has_flash_victim_utilization() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Message::clear_has_flash_victim_utilization() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Message::clear_flash_victim_utilization() {
  flash_victim_utilization_ = 0;
  clear_has_flash_victim_utilization();
}
inline float Message::flash_victim_utilization() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.flash_victim_utilization)
  return flash_victim_utilization_;
}
inline void Message::set_flash_victim_utilization(float value) {
  set_has_flash_victim_utilization();
  flash_victim_utilization_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.flash_victim_utilization)
}

// required float flash_full_blk_utilization = 10;
inline bool Message::has_flash_full_blk_utilization() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Message::set_has_flash_full_blk_utilization() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Message::clear_has_flash_full_blk_utilization() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Message::clear_flash_full_blk_utilization() {
  flash_full_blk_utilization_ = 0;
  clear_has_flash_full_blk_utilization();
}
inline float Message::flash_full_blk_utilization() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.flash_full_blk_utilization)
  return flash_full_blk_utilization_;
}
inline void Message::set_flash_full_blk_utilization(float value) {
  set_has_flash_full_blk_utilization();
  flash_full_blk_utilization_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.flash_full_blk_utilization)
}

// required uint32 node_nr_erases = 11;
inline bool Message::has_node_nr_erases() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Message::set_has_node_nr_erases() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Message::clear_has_node_nr_erases() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Message::clear_node_nr_erases() {
  node_nr_erases_ = 0u;
  clear_has_node_nr_erases();
}
inline ::google::protobuf::uint32 Message::node_nr_erases() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.node_nr_erases)
  return node_nr_erases_;
}
inline void Message::set_node_nr_erases(::google::protobuf::uint32 value) {
  set_has_node_nr_erases();
  node_nr_erases_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.node_nr_erases)
}

// required float local_log_utilization = 12;
inline bool Message::has_local_log_utilization() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Message::set_has_local_log_utilization() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Message::clear_has_local_log_utilization() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Message::clear_local_log_utilization() {
  local_log_utilization_ = 0;
  clear_has_local_log_utilization();
}
inline float Message::local_log_utilization() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.local_log_utilization)
  return local_log_utilization_;
}
inline void Message::set_local_log_utilization(float value) {
  set_has_local_log_utilization();
  local_log_utilization_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.local_log_utilization)
}

// required float request_number = 13;
inline bool Message::has_request_number() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Message::set_has_request_number() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Message::clear_has_request_number() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Message::clear_request_number() {
  request_number_ = 0;
  clear_has_request_number();
}
inline float Message::request_number() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.request_number)
  return request_number_;
}
inline void Message::set_request_number(float value) {
  set_has_request_number();
  request_number_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.request_number)
}

// optional float response_time = 14;
inline bool Message::has_response_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Message::set_has_response_time() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Message::clear_has_response_time() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Message::clear_response_time() {
  response_time_ = 0;
  clear_has_response_time();
}
inline float Message::response_time() const {
  // @@protoc_insertion_point(field_get:dataobj.Message.response_time)
  return response_time_;
}
inline void Message::set_response_time(float value) {
  set_has_response_time();
  response_time_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Message.response_time)
}

// -------------------------------------------------------------------

// Response

// required string rsp = 1;
inline bool Response::has_rsp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_rsp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_rsp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_rsp() {
  if (rsp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rsp_->clear();
  }
  clear_has_rsp();
}
inline const ::std::string& Response::rsp() const {
  // @@protoc_insertion_point(field_get:dataobj.Response.rsp)
  return *rsp_;
}
inline void Response::set_rsp(const ::std::string& value) {
  set_has_rsp();
  if (rsp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rsp_ = new ::std::string;
  }
  rsp_->assign(value);
  // @@protoc_insertion_point(field_set:dataobj.Response.rsp)
}
inline void Response::set_rsp(const char* value) {
  set_has_rsp();
  if (rsp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rsp_ = new ::std::string;
  }
  rsp_->assign(value);
  // @@protoc_insertion_point(field_set_char:dataobj.Response.rsp)
}
inline void Response::set_rsp(const char* value, size_t size) {
  set_has_rsp();
  if (rsp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rsp_ = new ::std::string;
  }
  rsp_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dataobj.Response.rsp)
}
inline ::std::string* Response::mutable_rsp() {
  set_has_rsp();
  if (rsp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rsp_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dataobj.Response.rsp)
  return rsp_;
}
inline ::std::string* Response::release_rsp() {
  clear_has_rsp();
  if (rsp_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rsp_;
    rsp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Response::set_allocated_rsp(::std::string* rsp) {
  if (rsp_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rsp_;
  }
  if (rsp) {
    set_has_rsp();
    rsp_ = rsp;
  } else {
    clear_has_rsp();
    rsp_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dataobj.Response.rsp)
}

// required float rsp_time = 2;
inline bool Response::has_rsp_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_rsp_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_rsp_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_rsp_time() {
  rsp_time_ = 0;
  clear_has_rsp_time();
}
inline float Response::rsp_time() const {
  // @@protoc_insertion_point(field_get:dataobj.Response.rsp_time)
  return rsp_time_;
}
inline void Response::set_rsp_time(float value) {
  set_has_rsp_time();
  rsp_time_ = value;
  // @@protoc_insertion_point(field_set:dataobj.Response.rsp_time)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dataobj

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::dataobj::Message_trace_operator_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dataobj::Message_trace_operator_t>() {
  return ::dataobj::Message_trace_operator_t_descriptor();
}
template <> struct is_proto_enum< ::dataobj::Message_request_type_t> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dataobj::Message_request_type_t>() {
  return ::dataobj::Message_request_type_t_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dataobj_2eproto__INCLUDED
